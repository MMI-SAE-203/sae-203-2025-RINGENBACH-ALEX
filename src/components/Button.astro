---
// Button.astro
export interface Props {
    variant?: "green" | "teal" | "lime" | "default" | "outlined";
    size?: "small" | "medium" | "large";
    url?: string;
    text?: string;
}

const {
    variant = "default",
    size = "medium",
    url = "#",
    text = "",
} = Astro.props;

// DÃ©finition des couleurs selon les variantes
const variantClass = {
    green: "bg-green-600 hover:bg-green-700 text-white",
    teal: "bg-teal-600 hover:bg-teal-700 text-white",
    lime: "bg-lime-600 hover:bg-lime-700 text-white",
    default: "bg-green-500 hover:bg-green-600 text-white",
    dark: "bg-gray-900 hover:bg-gray-800 text-white",
    outlined:
        "border-2 border-white-600 text-white-600 bg-transparent hover:bg-green-600 hover:text-white",
};

const sizeClass = {
    small: "px-4 py-2.5 text-sm",
    medium: "px-6 py-3 text-base",
    large: "px-8 py-4 text-base",
};
---

<a
    href={url}
    class={`group relative inline-flex items-center justify-center px-8 py-4 ${variantClass[variant]} text-lg font-semibold rounded-lg shadow-lg transform transition-all duration-300 ease-in-out hover:scale-105`}
>
    <span class="absolute inset-0 opacity-30 group-hover:opacity-50"></span>
    <span class="relative z-10 flex items-center gap-2">
        <slot />
        {text}
    </span>
</a>
